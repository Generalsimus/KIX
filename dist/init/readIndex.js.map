{"version":3,"file":"readIndex.js","sourceRoot":"","sources":["../../init/readIndex.js"],"names":[],"mappings":"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","sourcesContent":["\r\n\r\nimport yargs from \"yargs\"\r\nimport { hideBin } from \"yargs/helpers\"\r\nimport ts, { resolvePath, normalizeSlashes, combinePaths } from \"typescript\"\r\nimport path from \"path\"\r\nimport fs from \"fs\"\r\nimport consola from \"consola\"\r\nimport chokidar from \"chokidar\"\r\nimport { JSDOM } from \"jsdom\" \r\nimport { CompileFile } from \"./Compiler/CompileFile\"\r\nimport { fixLibFileLocationInCompilerOptions } from \"../Helpers/utils\"\r\n\r\nexport const ReadIndexHTML = (App) => {\r\n    const { __requestsThreshold, __RunDirName, __ModuleUrlPath, __Host, __compilerOptions } = App\r\n    const __IndexHTMLPath = path.resolve(\"./index.html\")\r\n    const __IndexHTMLRequesPaths = [\"/\", \"/index.html\"]\r\n\r\n    if (!fs.existsSync(__IndexHTMLPath)) {\r\n        throw consola.error(\"Couldn't find index.html'\")\r\n    }\r\n    return {\r\n        watchIndexHTML() {\r\n            chokidar.watch(__IndexHTMLPath).on('add', path => {\r\n                __requestsThreshold.clear();\r\n                this.readJsDomHTML()\r\n            }).on('change', path => {\r\n                __requestsThreshold.clear();\r\n                this.readJsDomHTML()\r\n            }).on('unlink', () => {\r\n                __requestsThreshold.clear();\r\n            });\r\n        },\r\n\r\n        readJsDomHTML() {\r\n            const HtmlDom = new JSDOM(fs.readFileSync(__IndexHTMLPath, \"utf8\")),\r\n                window = HtmlDom.window,\r\n                document = window.document;\r\n            document.head[document.head.firstElementChild ? \"insertBefore\" : \"appendChild\"](\r\n                Object.assign(document.createElement('script'),\r\n                    { src: __ModuleUrlPath }),\r\n                document.head.firstElementChild\r\n            )\r\n\r\n\r\n            const HTMLFilePaths = Array.prototype.map.call(document.querySelectorAll('script[lang=\"kix\"]'), (ELEMENT, index) => {\r\n                var UrlMeta = new window.URL(ELEMENT.src, 'http://e'),\r\n                    FilePath = normalizeSlashes(path.join(__RunDirName, decodeURIComponent(UrlMeta.pathname)));\r\n\r\n                return FilePath\r\n\r\n            });\r\n            const compilerOptions = fixLibFileLocationInCompilerOptions(__compilerOptions, __Host)\r\n            // Compiler(FilePath)\r\n            HTMLFilePaths.forEach(FilePath => CompileFile(FilePath, HTMLFilePaths, compilerOptions));\r\n\r\n            const INDEX_HTML_STRING = \"<!DOCTYPE html> \\n\" + document.documentElement.outerHTML\r\n            __IndexHTMLRequesPaths.forEach(INDEX_PATH => __requestsThreshold.set(INDEX_PATH, INDEX_HTML_STRING))\r\n\r\n        },\r\n        // readIndexHTML() {\r\n        //     if (fs.existsSync(__IndexHTMLPath)) {\r\n        //         return fs.readFileSync(__IndexHTMLPath, \"utf8\")\r\n        //     }\r\n\r\n        // }\r\n    }\r\n}"]}